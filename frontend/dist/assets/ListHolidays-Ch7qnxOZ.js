import{_ as g,c as r,a as s,e as u,t as c,F as m,m as D,f,n as p,o as l,g as v,v as M}from"./index-D08fRg5P.js";const _={name:"PhilippineCalendar",data(){return{currentDate:new Date,selectedDay:null,showModal:!1,daysOfWeek:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],tasksByDay:{},holidays:[{date:"January 1",name:"New Year's Day",type:"Regular Holiday",description:"A public holiday marking the start of a new year according to the Gregorian calendar."},{date:"January 2",name:"Special Working Holiday",type:"Special Working",description:"Additional holiday to create a long weekend."},{date:"January 23",name:"First Philippine Republic Day",type:"Special Working",description:"Commemorates the establishment of the First Philippine Republic in 1899."},{date:"February 25",name:"EDSA People Power Revolution",type:"Special Non-Working",description:"Commemorates the People Power Revolution of 1986 that peacefully overthrew President Ferdinand Marcos."},{date:"April 6",name:"Maundy Thursday",type:"Regular Holiday",description:"Christian holiday commemorating the Last Supper of Jesus Christ with the Apostles."},{date:"April 7",name:"Good Friday",type:"Regular Holiday",description:"Christian holiday commemorating the crucifixion of Jesus Christ."},{date:"April 8",name:"Black Saturday",type:"Special Non-Working",description:"Christian holiday preceding Easter Sunday."},{date:"April 9",name:"Araw ng Kagitingan",type:"Regular Holiday",description:"Day of Valor, commemorating the fall of Bataan during World War II."},{date:"May 1",name:"Labor Day",type:"Regular Holiday",description:"Honors the contributions of workers to society."},{date:"June 12",name:"Independence Day",type:"Regular Holiday",description:"Commemorates the Philippine Declaration of Independence from Spain in 1898."},{date:"July 6",name:"Eid'l Adha",type:"Regular Holiday",description:"Islamic holiday, the Feast of Sacrifice."},{date:"August 21",name:"Ninoy Aquino Day",type:"Special Non-Working",description:"Commemorates the assassination of Senator Benigno Aquino Jr."},{date:"August 28",name:"National Heroes Day",type:"Regular Holiday",description:"Honors and remembers all Philippine national heroes."},{date:"September 3",name:"Surrender of Gen. Yamashita",type:"Special Working",description:"Commemorates the surrender of Japanese General Tomoyuki Yamashita in 1945."},{date:"November 1",name:"All Saints' Day",type:"Special Non-Working",description:"Christian feast day honoring all saints."},{date:"November 2",name:"All Souls' Day",type:"Special Non-Working",description:"Christian feast day for commemorating the faithful departed."},{date:"November 30",name:"Bonifacio Day",type:"Regular Holiday",description:"Honors Andrés Bonifacio, a Filipino revolutionary leader."},{date:"December 8",name:"Feast of the Immaculate Conception",type:"Special Non-Working",description:"Catholic feast day celebrating the Immaculate Conception of the Virgin Mary."},{date:"December 24",name:"Christmas Eve",type:"Special Non-Working",description:"Day before Christmas Day."},{date:"December 25",name:"Christmas Day",type:"Regular Holiday",description:"Christian holiday celebrating the birth of Jesus Christ."},{date:"December 30",name:"Rizal Day",type:"Regular Holiday",description:"Commemorates the execution of José Rizal, a Philippine national hero."},{date:"December 31",name:"New Year's Eve",type:"Special Non-Working",description:"Last day of the year according to the Gregorian calendar."}]}},computed:{currentYear(){return this.currentDate.getFullYear()},currentMonth(){return this.currentDate.getMonth()},currentMonthName(){return new Date(this.currentYear,this.currentMonth,1).toLocaleString("default",{month:"long"})},calendarDays(){return this.generateCalendarDays()},currentMonthHolidays(){return this.holidays.filter(t=>this.parseHolidayDate(t.date).getMonth()===this.currentMonth).sort((t,a)=>{const h=this.parseHolidayDate(t.date).getDate(),y=this.parseHolidayDate(a.date).getDate();return h-y})}},methods:{parseHolidayDate(t){const[a,h]=t.split(" "),y=["January","February","March","April","May","June","July","August","September","October","November","December"].indexOf(a);return new Date(this.currentYear,y,parseInt(h))},formatDate(t){return t?t.toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric"}):""},generateCalendarDays(){const t=[],a=new Date(this.currentYear,this.currentMonth,1),h=new Date(this.currentYear,this.currentMonth+1,0),y=a.getDay(),i=new Date(this.currentYear,this.currentMonth,0).getDate();for(let e=y-1;e>=0;e--){const n=i-e,d=new Date(this.currentYear,this.currentMonth-1,n),k=d.toISOString().split("T")[0];t.push({date:n,fullDate:d,isCurrentMonth:!1,isToday:this.isToday(d),holiday:this.getHolidayForDate(d),tasks:this.tasksByDay[k]||[]})}for(let e=1;e<=h.getDate();e++){const n=new Date(this.currentYear,this.currentMonth,e),d=n.toISOString().split("T")[0];t.push({date:e,fullDate:n,isCurrentMonth:!0,isToday:this.isToday(n),holiday:this.getHolidayForDate(n),tasks:this.tasksByDay[d]||[]})}const o=42-t.length;for(let e=1;e<=o;e++){const n=new Date(this.currentYear,this.currentMonth+1,e),d=n.toISOString().split("T")[0];t.push({date:e,fullDate:n,isCurrentMonth:!1,isToday:this.isToday(n),holiday:this.getHolidayForDate(n),tasks:this.tasksByDay[d]||[]})}return t},isToday(t){const a=new Date;return t.getDate()===a.getDate()&&t.getMonth()===a.getMonth()&&t.getFullYear()===a.getFullYear()},getHolidayForDate(t){const a=t.toLocaleString("default",{month:"long"}),h=t.getDate(),y=`${a} ${h}`;return this.holidays.find(i=>i.date===y)||null},prevMonth(){this.currentDate=new Date(this.currentYear,this.currentMonth-1,1),this.closeModal()},nextMonth(){this.currentDate=new Date(this.currentYear,this.currentMonth+1,1),this.closeModal()},selectDay(t){this.selectedDay={...t,tasks:[...t.tasks||[]]},this.showModal=!0},selectHoliday(t){const a=this.parseHolidayDate(t.date),h=this.calendarDays.find(y=>y.fullDate.getDate()===a.getDate()&&y.fullDate.getMonth()===a.getMonth());h&&this.selectDay(h)},closeModal(){this.showModal=!1,this.selectedDay=null},addTask(){this.selectedDay.tasks||(this.selectedDay.tasks=[]),this.selectedDay.tasks.push(""),this.updateTasksInStorage()},updateTask(t,a){this.selectedDay.tasks[a].trim()===""?this.removeTask(a):this.updateTasksInStorage()},removeTask(t){this.selectedDay.tasks.splice(t,1),this.updateTasksInStorage()},updateTasksInStorage(){const t=this.selectedDay.fullDate.toISOString().split("T")[0];this.$set(this.tasksByDay,t,[...this.selectedDay.tasks]),this.$forceUpdate()},handleEscape(t){t.key==="Escape"&&this.showModal&&this.closeModal()}},mounted(){document.addEventListener("keydown",this.handleEscape)},beforeUnmount(){document.removeEventListener("keydown",this.handleEscape)}},S={class:"calendar-wrapper"},C={class:"calendar-header"},b={class:"calendar"},w=["onClick"],H={class:"date-number"},T={key:1,class:"task-indicator"},N={class:"monthly-holidays"},A={class:"holiday-list"},F=["onClick"],R={class:"holiday-date-small"},W={class:"holiday-name-small"},Y={class:"modal-header"},I={class:"date-header"},B={key:0,class:"holiday-section"},J={class:"holiday-name"},L={class:"modal-body"},E={key:0,class:"holiday-info-section"},P={class:"holiday-description"},O={class:"holiday-info"},x={class:"info-item"},V={key:0},G={key:1},K={key:2},U={class:"tasks-section"},z={class:"task-list"},q=["onUpdate:modelValue","onBlur"],j=["onClick"];function Q(t,a,h,y,i,o){return l(),r("div",S,[s("div",C,[s("button",{onClick:a[0]||(a[0]=(...e)=>o.prevMonth&&o.prevMonth(...e)),class:"nav-button"},"◀"),s("h2",null,c(o.currentMonthName)+" "+c(o.currentYear),1),s("button",{onClick:a[1]||(a[1]=(...e)=>o.nextMonth&&o.nextMonth(...e)),class:"nav-button"},"▶")]),s("div",b,[(l(!0),r(m,null,D(i.daysOfWeek,e=>(l(),r("div",{key:e,class:"calendar-cell day-name"},c(e),1))),128)),(l(!0),r(m,null,D(o.calendarDays,(e,n)=>(l(),r("div",{key:n,class:p(["calendar-cell",{"other-month":!e.isCurrentMonth},{today:e.isToday},{"has-holiday":e.holiday},{"has-tasks":e.tasks&&e.tasks.length>0}]),onClick:d=>o.selectDay(e)},[s("div",H,c(e.date),1),e.holiday?(l(),r("div",{key:0,class:p(["holiday-indicator",e.holiday.type.toLowerCase().replace(" ","-")])},null,2)):u("",!0),e.tasks&&e.tasks.length?(l(),r("div",T,c(e.tasks.length)+" task"+c(e.tasks.length>1?"s":""),1)):u("",!0)],10,w))),128))]),s("div",N,[s("h3",null,c(o.currentMonthName)+" Holidays",1),s("div",A,[(l(!0),r(m,null,D(o.currentMonthHolidays,(e,n)=>(l(),r("div",{key:n,class:p(["holiday-item",e.type.toLowerCase().replace(" ","-")]),onClick:d=>o.selectHoliday(e)},[s("div",R,c(e.date.split(" ")[1]),1),s("div",W,c(e.name),1)],10,F))),128))])]),i.showModal?(l(),r("div",{key:0,class:"modal-overlay",onClick:a[4]||(a[4]=f((...e)=>o.closeModal&&o.closeModal(...e),["self"]))},[s("div",{class:p(["modal-content",{"has-holiday":i.selectedDay.holiday}])},[s("button",{class:"close-button",onClick:a[2]||(a[2]=(...e)=>o.closeModal&&o.closeModal(...e))},"×"),s("div",Y,[s("div",I,c(o.formatDate(i.selectedDay.fullDate)),1),i.selectedDay.holiday?(l(),r("div",B,[s("h3",J,c(i.selectedDay.holiday.name),1),s("div",{class:p(["holiday-badge",i.selectedDay.holiday.type.toLowerCase().replace(" ","-")])},c(i.selectedDay.holiday.type),3)])):u("",!0)]),s("div",L,[i.selectedDay.holiday?(l(),r("div",E,[s("p",P,c(i.selectedDay.holiday.description),1),s("div",O,[s("div",x,[a[5]||(a[5]=s("strong",null,"Pay Rules:",-1)),i.selectedDay.holiday.type==="Regular Holiday"?(l(),r("span",V," 100% additional pay for working, or 100% pay if not working ")):i.selectedDay.holiday.type==="Special Non-Working"?(l(),r("span",G," 30% additional pay for working, or no pay if not working ")):(l(),r("span",K," No additional pay for working "))])])])):u("",!0),s("div",U,[a[6]||(a[6]=s("h4",null,"Tasks",-1)),s("div",z,[(l(!0),r(m,null,D(i.selectedDay.tasks,(e,n)=>(l(),r("div",{key:n,class:"task-item"},[v(s("input",{type:"text","onUpdate:modelValue":d=>i.selectedDay.tasks[n]=d,onBlur:d=>o.updateTask(i.selectedDay,n),class:"task-input",placeholder:"Enter task description"},null,40,q),[[M,i.selectedDay.tasks[n]]]),s("button",{onClick:d=>o.removeTask(n),class:"remove-task"},"×",8,j)]))),128))]),s("button",{onClick:a[3]||(a[3]=(...e)=>o.addTask&&o.addTask(...e)),class:"add-task-btn"},"+ Add Task")])])],2)])):u("",!0)])}const Z=g(_,[["render",Q],["__scopeId","data-v-66fb5fcb"]]);export{Z as default};
